// <auto-generated />
using System;
using Eccom.DtContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eccom.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230617041507_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Cadena", b =>
                {
                    b.Property<int>("IdCadena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCadena"));

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int?>("IdDireccionNavigationIdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoCadena")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomCad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoliticasPrivacidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfcCad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminosCondiciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCadena");

                    b.HasIndex("IdDireccionNavigationIdDireccion");

                    b.HasIndex("IdTipoCadena");

                    b.ToTable("Cadenas");
                });

            modelBuilder.Entity("Domain.Entities.CarritoCompra", b =>
                {
                    b.Property<int>("IdCarritoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarritoCompra"));

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<int>("FechaActualizacion")
                        .HasColumnType("int");

                    b.Property<int>("FechaCreacion")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoCarrito")
                        .HasColumnType("int");

                    b.Property<int>("IdPago")
                        .HasColumnType("int");

                    b.Property<double>("Impuestos")
                        .HasColumnType("float");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdCarritoCompra");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstadoCarrito");

                    b.HasIndex("IdPago");

                    b.ToTable("CarritoCompras");
                });

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("NomCat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Domain.Entities.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCiudad"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("NomCiu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCiudad");

                    b.HasIndex("IdEstado");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("ApellidosCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FechaNacCli")
                        .HasColumnType("int");

                    b.Property<int>("FechaRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoCuenta")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<string>("NomUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdEstadoCuenta");

                    b.HasIndex("IdGenero");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Domain.Entities.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<string>("Calle1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calle2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<string>("InfoExtra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDireccion");

                    b.HasIndex("IdCiudad");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("ApellidosEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FechaNacEmp")
                        .HasColumnType("int");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfcEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdRol");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Domain.Entities.Envio", b =>
                {
                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoEnvio")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodoEnvio")
                        .HasColumnType("int");

                    b.Property<int>("IdVentas")
                        .HasColumnType("int");

                    b.Property<string>("ReferenciaEnvio")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdEstadoEnvio");

                    b.HasIndex("IdMetodoEnvio");

                    b.HasIndex("IdVentas");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("NomEst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.HasIndex("IdPais");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Domain.Entities.EstadoCarrito", b =>
                {
                    b.Property<int>("IdEstadoCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCarrito"));

                    b.Property<string>("NomEstCar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoCarrito");

                    b.ToTable("EstadoCarritos");
                });

            modelBuilder.Entity("Domain.Entities.EstadoCuenta", b =>
                {
                    b.Property<int>("IdEstadoCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCuenta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoCuenta");

                    b.ToTable("EstadoCuentas");
                });

            modelBuilder.Entity("Domain.Entities.EstadoEnvio", b =>
                {
                    b.Property<int>("IdEstadoEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoEnvio"));

                    b.Property<string>("NomEstEnv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoEnvio");

                    b.ToTable("EstadoEnvios");
                });

            modelBuilder.Entity("Domain.Entities.EstadoPago", b =>
                {
                    b.Property<int>("IdEstadoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPago"));

                    b.Property<string>("NomEstPag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoPago");

                    b.ToTable("EstadoPagos");
                });

            modelBuilder.Entity("Domain.Entities.EstadoSucursal", b =>
                {
                    b.Property<int>("IdEstadoSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoSucursal"));

                    b.Property<string>("NomEstSuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstadoSucursal");

                    b.ToTable("EstadoSucursales");
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenero"));

                    b.Property<string>("NomGen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Domain.Entities.HistorialCompra", b =>
                {
                    b.Property<int>("FechaCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdCarritoCompra")
                        .HasColumnType("int");

                    b.Property<string>("TotalCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("IdCarritoCompra");

                    b.ToTable("HistorialCompras");
                });

            modelBuilder.Entity("Domain.Entities.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("NomMar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Domain.Entities.MetodoEnvio", b =>
                {
                    b.Property<int>("IdMetodoEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoEnvio"));

                    b.Property<string>("NomMetEnv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMetodoEnvio");

                    b.ToTable("MetodoEnvios");
                });

            modelBuilder.Entity("Domain.Entities.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<int>("FechaCreacion")
                        .HasColumnType("int");

                    b.Property<byte[]>("Icono")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomMetPag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMetodoPago");

                    b.ToTable("MetodoPagos");
                });

            modelBuilder.Entity("Domain.Entities.ModeloNegocio", b =>
                {
                    b.Property<int>("IdModeloNegocio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModeloNegocio"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomMod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdModeloNegocio");

                    b.ToTable("ModeloNegocios");
                });

            modelBuilder.Entity("Domain.Entities.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"));

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FechaCreacion")
                        .HasColumnType("int");

                    b.Property<int>("FechaExpiracion")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdMetodoPago");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Property<int>("IdPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPais"));

                    b.Property<string>("Iso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomPais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPais");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Domain.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Descuento")
                        .HasColumnType("int");

                    b.Property<int>("FechaActualizacion")
                        .HasColumnType("int");

                    b.Property<int>("FechaCreacion")
                        .HasColumnType("int");

                    b.Property<int>("IdCarritoCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImagenProd")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<double>("Impuestos")
                        .HasColumnType("float");

                    b.Property<string>("NomPro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCarritoCompra");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NomRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Entities.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("DescripcionSer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomServi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Domain.Entities.Subproducto", b =>
                {
                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImagenSubProd")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NomSubProd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasIndex("IdProducto");

                    b.ToTable("Subproductos");
                });

            modelBuilder.Entity("Domain.Entities.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursal"));

                    b.Property<int>("FechaApertura")
                        .HasColumnType("int");

                    b.Property<int>("FechaCierre")
                        .HasColumnType("int");

                    b.Property<int>("IdCadena")
                        .HasColumnType("int");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoSucursal")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("InfoExtra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoliticasPrivacidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfcSuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminosCondiciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSucursal");

                    b.HasIndex("IdCadena");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdEstadoSucursal");

                    b.HasIndex("IdServicio");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Domain.Entities.SucursalEmpleado", b =>
                {
                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.HasKey("IdSucursal", "IdEmpleado");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("SucursalEmpleados");
                });

            modelBuilder.Entity("Domain.Entities.TipoCadena", b =>
                {
                    b.Property<int>("IdTipoCadena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoCadena"));

                    b.Property<string>("DescripcionCad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdModeloNegocio")
                        .HasColumnType("int");

                    b.Property<string>("NomTipCad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoCadena");

                    b.HasIndex("IdModeloNegocio");

                    b.ToTable("TipoCadenas");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FechaEntrega")
                        .HasColumnType("int");

                    b.Property<int>("FechaRealizada")
                        .HasColumnType("int");

                    b.Property<int>("IdCarritoCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoPago")
                        .HasColumnType("int");

                    b.HasKey("IdVenta");

                    b.HasIndex("IdCarritoCompra");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstadoPago");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Cadena", b =>
                {
                    b.HasOne("Domain.Entities.Direccion", "IdDireccionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccionNavigationIdDireccion");

                    b.HasOne("Domain.Entities.TipoCadena", "IdTipoCadenaNavigation")
                        .WithMany()
                        .HasForeignKey("IdTipoCadena")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdTipoCadenaNavigation");
                });

            modelBuilder.Entity("Domain.Entities.CarritoCompra", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "IdClienteNavigation")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EstadoCarrito", "IdEstadoCarritoNavigation")
                        .WithMany()
                        .HasForeignKey("IdEstadoCarrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Pago", "IdPagoNavigation")
                        .WithMany()
                        .HasForeignKey("IdPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEstadoCarritoNavigation");

                    b.Navigation("IdPagoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Ciudad", b =>
                {
                    b.HasOne("Domain.Entities.Estado", "IdEstadoNavigation")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.HasOne("Domain.Entities.Direccion", "IdDireccionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EstadoCuenta", "IdEstadoCuentaNavigation")
                        .WithMany()
                        .HasForeignKey("IdEstadoCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Genero", "IdGeneroNavigation")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdEstadoCuentaNavigation");

                    b.Navigation("IdGeneroNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Direccion", b =>
                {
                    b.HasOne("Domain.Entities.Ciudad", "IdCiudadNavigation")
                        .WithMany()
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCiudadNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.HasOne("Domain.Entities.Direccion", "IdDireccionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Rol", "IdRolNavigation")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Envio", b =>
                {
                    b.HasOne("Domain.Entities.Direccion", "IdDireccionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EstadoEnvio", "IdEstadoEnvioNavigation")
                        .WithMany()
                        .HasForeignKey("IdEstadoEnvio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.MetodoEnvio", "IdMetodoEnvioNavigation")
                        .WithMany()
                        .HasForeignKey("IdMetodoEnvio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Venta", "IdVentasNavigation")
                        .WithMany()
                        .HasForeignKey("IdVentas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdEstadoEnvioNavigation");

                    b.Navigation("IdMetodoEnvioNavigation");

                    b.Navigation("IdVentasNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.HasOne("Domain.Entities.Pais", "IdPaisNavigation")
                        .WithMany()
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPaisNavigation");
                });

            modelBuilder.Entity("Domain.Entities.HistorialCompra", b =>
                {
                    b.HasOne("Domain.Entities.CarritoCompra", "IdCarritoCompraNavigation")
                        .WithMany()
                        .HasForeignKey("IdCarritoCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCarritoCompraNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Pago", b =>
                {
                    b.HasOne("Domain.Entities.MetodoPago", "IdMetodoPagoNavigation")
                        .WithMany()
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdMetodoPagoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Producto", b =>
                {
                    b.HasOne("Domain.Entities.CarritoCompra", "IdCarritoCompraNavigation")
                        .WithMany()
                        .HasForeignKey("IdCarritoCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Categoria", "IdCategoriaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Marca", "IdMarcaNavigation")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCarritoCompraNavigation");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdMarcaNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Subproducto", b =>
                {
                    b.HasOne("Domain.Entities.Producto", "IdProductoNavigation")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Sucursal", b =>
                {
                    b.HasOne("Domain.Entities.Cadena", "IdCadenaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCadena")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Direccion", "IdDireccionNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EstadoSucursal", "IdEstadoSucursalNavigation")
                        .WithMany()
                        .HasForeignKey("IdEstadoSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Servicio", "IdServicioNavigation")
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCadenaNavigation");

                    b.Navigation("IdDireccionNavigation");

                    b.Navigation("IdEstadoSucursalNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("Domain.Entities.SucursalEmpleado", b =>
                {
                    b.HasOne("Domain.Entities.Empleado", "IdEmpleadoNavigation")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Sucursal", "IdSucursalNavigation")
                        .WithMany()
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdSucursalNavigation");
                });

            modelBuilder.Entity("Domain.Entities.TipoCadena", b =>
                {
                    b.HasOne("Domain.Entities.ModeloNegocio", "IdModeloNegocioNavigation")
                        .WithMany()
                        .HasForeignKey("IdModeloNegocio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdModeloNegocioNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.HasOne("Domain.Entities.CarritoCompra", "IdCarritoCompraNavigation")
                        .WithMany()
                        .HasForeignKey("IdCarritoCompra")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Empleado", "IdEmpleadoNavigation")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.EstadoPago", "IdEstadoPagoNavigation")
                        .WithMany()
                        .HasForeignKey("IdEstadoPago")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IdCarritoCompraNavigation");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdEstadoPagoNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
